{"version":3,"sources":["modules/loan_calculator/components/Calculator/InputPanel/NumberInput/NumberInput.style.ts","modules/loan_calculator/components/Calculator/InputPanel/NumberInput/NumberInput.tsx","modules/loan_calculator/components/Calculator/InputPanel/InputPanel.style.ts","modules/loan_calculator/components/Calculator/InputPanel/InputPanel.tsx","modules/loan_calculator/components/Calculator/ResultDisplay/ResultDisplay.style.ts","modules/loan_calculator/components/Calculator/ResultDisplay/ResultDisplay.tsx","modules/loan_calculator/components/Calculator/Calculator.style.ts","modules/loan_calculator/components/Calculator/Calculator.tsx","fakeAPI.js","modules/loan_calculator/actions.js","modules/loan_calculator/containers/CalculatorContainer.tsx","modules/loan_calculator/LoanCalculator.tsx","modules/loan_calculator/reducer.ts","store/store.js","App.js","index.js"],"names":["Container","styled","div","InputWrapper","NumberInput","value","title","onChange","error","prefix","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","id","type","FormHelperText","defaultProps","InputPanel","inputChangeHandler","calculateMonthlyInstallment","amountValue","durationValue","useState","errorAmount","setErrorAmount","errorDuration","setErrorDuration","onInputChange","event","target","Button","onClick","duration","amount","durationError","amountError","variant","color","Title","ResultDisplay","monthlyInstallment","LoadingWrapper","Calculator","changeAmount","changeDuration","loading","CircularProgress","Paper","API","post","Promise","resolve","setTimeout","data","Math","floor","random","onAmountChange","dispatch","onDurationChange","getState","a","response","message","connect","state","actions","LoanCalculator","reducer","action","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","LoanCalculatorReducer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.369f4070.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n`\n\nexport const ErrorText = styled.div`\n    display: flex;\n    font-size: 11px;\n    color: red;\n    height: 30px;\n    position: absolute;\n    bottom: -30px;\n`\n\nexport const InputWrapper = styled.div`\n    display: flex;\n \n`\n\n\n","import React, { FC, ChangeEventHandler } from \"react\";\nimport { FormControl, InputLabel, Input, FormHelperText, InputAdornment} from \"@material-ui/core\";\nimport { Container, InputWrapper } from \"./NumberInput.style\";\n\ninterface Props {\n    value: string | number;\n    title?: string;\n    error?: string;\n    prefix?: string;\n    onChange: ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n}\n\nconst NumberInput: FC<Props> = ({ value, title, onChange, error, prefix }) => {\n    return (\n        <Container>\n            <InputWrapper>\n                <FormControl error={!!error}>\n                    <InputLabel htmlFor=\"component-error\">{title}</InputLabel>\n                    <Input\n                    startAdornment={<InputAdornment position=\"start\">{prefix}</InputAdornment>}\n                        id=\"component-error\"\n                        value={value === 0 ? \"\" : value}\n                        type={\"number\"}\n                        onChange={onChange}\n                    />\n                    <FormHelperText id=\"component-error-text\">\n                        {error}\n                    </FormHelperText>\n                </FormControl>\n            </InputWrapper>\n        </Container>\n    );\n};\n\nNumberInput.defaultProps = {\n    value: \"\"\n};\n\nexport default NumberInput;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    height: 40px;\n    & > * {\n        margin-right: 10px;\n    }\n`\n","import React, { useState, FC, ChangeEventHandler } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport NumberInput from \"./NumberInput/NumberInput\";\nimport { Container } from \"./InputPanel.style\";\n\ninterface Props {\n    inputChangeHandler: (value: number, type: string) => void;\n    calculateMonthlyInstallment: () => void;\n    amountValue: number | string;\n    durationValue: number | string;\n}\n\nconst InputPanel: FC<Props> = ({\n    inputChangeHandler,\n    calculateMonthlyInstallment,\n    amountValue,\n    durationValue\n}) => {\n    const [errorAmount, setErrorAmount] = useState<string>(\"\");\n    const [errorDuration, setErrorDuration] = useState<string>(\"\");\n\n    const onInputChange = (\n        type: string\n    ): ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> => event => {\n        if (type === \"amount\") {\n            setErrorAmount(\"\");\n        } else if (type === \"duration\") {\n            setErrorDuration(\"\");\n        }\n        inputChangeHandler(+event.target.value, type);\n    };\n\n    const validateDuration = (duration: number | string) => {\n        if (typeof duration === \"number\") {\n            if (duration < 1 || duration > 5) {\n                return \"Should be in range of 1 and 5\";\n            }\n            return \"\";\n        }\n        return \"Please enter a valid number\";\n    };\n\n    const validateAmount = (amount: number | string) => {\n        if (typeof amount === \"number\") {\n            if (amount < 10000 || amount > 100000) {\n                return \"Should be in range of 10,000 and 100,000\";\n            }\n            return \"\";\n        }\n        return \"Please enter a valid number\";\n    };\n\n    const onSubmit = () => {\n        const durationError = validateDuration(durationValue);\n        const amountError = validateAmount(amountValue);\n        if (!durationError && !amountError) {\n            calculateMonthlyInstallment();\n        }\n        setErrorAmount(amountError);\n        setErrorDuration(durationError);\n    };\n\n    return (\n        <Container>\n            <NumberInput\n                prefix={\"â‚¬\"}\n                error={errorAmount}\n                value={amountValue}\n                onChange={onInputChange(\"amount\")}\n                title=\"Amount\"\n                \n            />\n            <NumberInput\n                error={errorDuration}\n                value={durationValue}\n                onChange={onInputChange(\"duration\")}\n                title=\"Duration\"\n            />\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n                OK\n            </Button>\n        </Container>\n    );\n};\n\nexport default InputPanel;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: flex-end;\n    height: 50px;\n    margin-top: 10px;\n`;\nexport const Title = styled.div`\n    display: flex;\n    margin-right: 5px;\n`;\n","import React, { FC } from \"react\";\nimport { Container, Title } from \"./ResultDisplay.style\";\n\ninterface Props {\n    monthlyInstallment: number | string;\n}\n\nconst ResultDisplay: FC<Props> = ({ monthlyInstallment }) => {\n    return (\n        <Container>\n            <Title>Monthly Installment:</Title>\n            <b> {monthlyInstallment ? ` ${\" \"+monthlyInstallment} EUR` : \"\"}</b>\n        </Container>\n    );\n};\n\nexport default ResultDisplay;\n","import styled from \"styled-components\";\n\nexport const LoadingWrapper = styled.div`\n    display: flex;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    z-index: 2;\n    opacity: 0.8;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 416px;\n    width: 500px;\n    height: 200px;\n    position: relative;\n\n    & > * {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        padding: 20px;\n        box-sizing: border-box;\n        justify-content: center;\n        /* align-items: center; */\n    }\n`;\n","import React, { FC } from \"react\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport ResultDisplay from \"./ResultDisplay/ResultDisplay\";\nimport { Paper, CircularProgress } from \"@material-ui/core\";\nimport { Container, LoadingWrapper } from \"./Calculator.style\";\n\ninterface Props {\n    changeAmount: (amount: number) => void;\n    changeDuration: (duration: number) => void;\n    amountValue: number | string;\n    durationValue: number | string;\n    monthlyInstallment: number | string;\n    calculateMonthlyInstallment: () => void;\n    loading: boolean;\n}\n\nconst Calculator: FC<Props> = ({\n    changeAmount,\n    changeDuration,\n    amountValue,\n    durationValue,\n    monthlyInstallment,\n    calculateMonthlyInstallment,\n    loading\n}) => {\n    const inputChangeHandler = (value: number, type: string) => {\n        if (type === \"amount\") {\n            changeAmount(value);\n        } else if (type === \"duration\") {\n            changeDuration(value);\n        }\n    };\n\n    return (\n        <Container>\n            {loading && (\n                <LoadingWrapper>\n                    <CircularProgress />\n                </LoadingWrapper>\n            )}\n            <Paper>\n                <InputPanel\n                    calculateMonthlyInstallment={calculateMonthlyInstallment}\n                    durationValue={durationValue}\n                    amountValue={amountValue}\n                    inputChangeHandler={inputChangeHandler}\n                />\n                <ResultDisplay monthlyInstallment={monthlyInstallment} />\n            </Paper>\n        </Container>\n    );\n};\n\nexport default Calculator;\n","const API = {\n    post({ duration, amount }) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({\n                    data: {\n                        amount,\n                        duration,\n                        // fake formula\n                        monthlyInstallment: Math.floor((amount / (duration * 12)) )\n                    }\n                });\n            }, Math.random()*2000);\n        });\n    }\n};\n\nexport default API;\n","import API from \"../../fakeAPI\";\n\nexport const onAmountChange = amount => dispatch => {\n    dispatch({ type: \"CHANGE_AMOUNT\", amount });\n};\n\nexport const onDurationChange = duration => dispatch => {\n    dispatch({ type: \"CHANGE_DURATION\", duration });\n};\n\nexport const calculateMonthlyInstallment = () => async (dispatch, getState) => {\n    const { amount, duration } = getState();\n    // Simulation of API-call\n    dispatch({ type: \"SET_LOADING\", loading: true });\n    try {\n        const response = await API.post({ amount, duration });\n        dispatch({\n            type: \"SET_MONTHLY_INSTALLMENT\",\n            monthlyInstallment: response.data.monthlyInstallment\n        });\n    } catch (e) {\n        // Custom error handle goes here ...\n     \n        dispatch({ type: \"SET_ERROR\", message: e.message });\n    }\n    dispatch({ type: \"SET_LOADING\", loading: false }); \n};\n","import React, { FC } from \"react\";\nimport Calculator from \"../components/Calculator/Calculator\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport { Istate } from \"../reducer\";\n\ninterface Props {\n    onAmountChange: (value: number) => void;\n    onDurationChange: (value: number) => void;\n    calculateMonthlyInstallment: () => void;\n    amountValue: number | string;\n    durationValue: number | string;\n    monthlyInstallment: number | string;\n    loading: boolean;\n}\n\nconst CalculatorContainer: FC<Props> = ({\n    onAmountChange,\n    onDurationChange,\n    calculateMonthlyInstallment,\n    amountValue,\n    durationValue,\n    monthlyInstallment,\n    loading\n}) => {\n    return (\n        <Calculator\n            loading={loading}\n            calculateMonthlyInstallment={calculateMonthlyInstallment}\n            amountValue={amountValue}\n            durationValue={durationValue}\n            changeAmount={onAmountChange}\n            changeDuration={onDurationChange}\n            monthlyInstallment={monthlyInstallment}\n        />\n    );\n};\n\nconst mapStateToProps = (state: Istate) => {\n    return {\n        loading: state.loading,\n        amountValue: state.amount,\n        durationValue: state.duration,\n        monthlyInstallment: state.monthlyInstallment\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    actions\n)(CalculatorContainer);\n","import React from 'react';\nimport CalculatorContainer from './containers/CalculatorContainer'\n\nconst LoanCalculator = () => {\n    return <CalculatorContainer/>\n}\n\nexport default LoanCalculator;","interface Iaction {\n    type: string;\n    [key: string]: any;\n}\n\nexport interface Istate {\n    amount: number | string;\n    duration: number | string;\n    monthlyInstallment: number | string;\n    loading: boolean;\n}\n\nconst reducer = (\n    state: Istate = {\n        amount: \"\",\n        duration: \"\",\n        monthlyInstallment: \"\",\n        loading: false\n    },\n    action:Iaction\n) => {\n    switch (action.type) {\n        case \"SET_ERROR\":\n            // Custom error handle goes here ...\n            return state;\n        case \"SET_LOADING\":\n            return { ...state, loading: action.loading };\n        case \"SET_MONTHLY_INSTALLMENT\":\n            return { ...state, monthlyInstallment: action.monthlyInstallment };\n        case \"CHANGE_AMOUNT\":\n            return { ...state, amount: action.amount };\n        case \"CHANGE_DURATION\":\n            return { ...state, duration: action.duration };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport LoanCalculatorReducer from '../modules/loan_calculator/reducer'\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(LoanCalculatorReducer);\n\nexport default store;","import React from \"react\";\nimport LoanCalculator from \"./modules/loan_calculator/LoanCalculator\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <LoanCalculator />\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}